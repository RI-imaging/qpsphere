import numpy as np

from qpsphere.models import rytov

data = np.array(np.array([
        1.23704690e-03, -1.83721900e-03,  1.75599835e-03, -2.10326957e-03,
       -1.20586285e-03, -5.94630023e-04, -2.11503473e-03,  4.40055795e-04,
       -1.87390624e-03,  2.35135946e-03,  2.35135946e-03, -1.87390624e-03,
        4.40055795e-04, -2.11503473e-03, -5.94630023e-04, -1.20586285e-03,
       -2.10326957e-03,  1.75599835e-03, -1.83721900e-03,  1.23704690e-03,
       -1.83721900e-03,  1.00351009e-03,  1.22275506e-03, -8.36131570e-04,
       -3.42558604e-03, -3.07089300e-03, -4.58397483e-03, -5.64555463e-04,
        4.64660203e-04,  5.80798741e-03,  5.80798741e-03,  4.64660203e-04,
       -5.64555463e-04, -4.58397483e-03, -3.07089300e-03, -3.42558604e-03,
       -8.36131570e-04,  1.22275506e-03,  1.00351009e-03, -1.83721900e-03,
        1.75599835e-03,  1.22275506e-03, -3.53087299e-03,  3.58948112e-03,
       -1.51210290e-03, -4.15315945e-03, -3.97029379e-03, -1.17544107e-04,
        1.47953222e-03,  5.72786573e-03,  5.72786573e-03,  1.47953222e-03,
       -1.17544107e-04, -3.97029379e-03, -4.15315945e-03, -1.51210290e-03,
        3.58948112e-03, -3.53087299e-03,  1.22275506e-03,  1.75599835e-03,
       -2.10326957e-03, -8.36131570e-04,  3.58948112e-03, -4.02368791e-03,
        5.27946278e-03,  1.57847553e-05, -2.10664654e-03,  8.14915262e-03,
       -9.20925662e-03,  8.64815153e-03,  8.64815153e-03, -9.20925662e-03,
        8.14915262e-03, -2.10664654e-03,  1.57847553e-05,  5.27946278e-03,
       -4.02368791e-03,  3.58948112e-03, -8.36131570e-04, -2.10326957e-03,
       -1.20586285e-03, -3.42558604e-03, -1.51210290e-03,  5.27946278e-03,
       -6.14789175e-03,  3.11273616e-03,  6.64596492e-03, -9.47563723e-03,
        1.44466665e-02, -2.27472447e-02, -2.27472447e-02,  1.44466665e-02,
       -9.47563723e-03,  6.64596492e-03,  3.11273616e-03, -6.14789175e-03,
        5.27946278e-03, -1.51210290e-03, -3.42558604e-03, -1.20586285e-03,
       -5.94630023e-04, -3.07089300e-03, -4.15315945e-03,  1.57847553e-05,
        3.11273616e-03,  8.38879496e-03,  1.42652057e-02,  1.91706214e-02,
        2.10718200e-01,  2.87406445e-01,  2.87406445e-01,  2.10718200e-01,
        1.91706214e-02,  1.42652057e-02,  8.38879496e-03,  3.11273616e-03,
        1.57847553e-05, -4.15315945e-03, -3.07089300e-03, -5.94630023e-04,
       -2.11503473e-03, -4.58397483e-03, -3.97029379e-03, -2.10664654e-03,
        6.64596492e-03,  1.42652057e-02,  1.13957971e-01,  3.48833084e-01,
        4.44556117e-01,  4.86700922e-01,  4.86700922e-01,  4.44556117e-01,
        3.48833084e-01,  1.13957971e-01,  1.42652057e-02,  6.64596492e-03,
       -2.10664654e-03, -3.97029379e-03, -4.58397483e-03, -2.11503473e-03,
        4.40055795e-04, -5.64555463e-04, -1.17544107e-04,  8.14915262e-03,
       -9.47563723e-03,  1.91706214e-02,  3.48833084e-01,  4.85881060e-01,
        5.57587683e-01,  5.90545535e-01,  5.90545535e-01,  5.57587683e-01,
        4.85881060e-01,  3.48833084e-01,  1.91706214e-02, -9.47563723e-03,
        8.14915262e-03, -1.17544107e-04, -5.64555463e-04,  4.40055795e-04,
       -1.87390624e-03,  4.64660203e-04,  1.47953222e-03, -9.20925662e-03,
        1.44466665e-02,  2.10718200e-01,  4.44556117e-01,  5.57587683e-01,
        6.23176277e-01,  6.51309371e-01,  6.51309371e-01,  6.23176277e-01,
        5.57587683e-01,  4.44556117e-01,  2.10718200e-01,  1.44466665e-02,
       -9.20925662e-03,  1.47953222e-03,  4.64660203e-04, -1.87390624e-03,
        2.35135946e-03,  5.80798741e-03,  5.72786573e-03,  8.64815153e-03,
       -2.27472447e-02,  2.87406445e-01,  4.86700922e-01,  5.90545535e-01,
        6.51309371e-01,  6.79913163e-01,  6.79913163e-01,  6.51309371e-01,
        5.90545535e-01,  4.86700922e-01,  2.87406445e-01, -2.27472447e-02,
        8.64815153e-03,  5.72786573e-03,  5.80798741e-03,  2.35135946e-03,
        2.35135946e-03,  5.80798741e-03,  5.72786573e-03,  8.64815153e-03,
       -2.27472447e-02,  2.87406445e-01,  4.86700922e-01,  5.90545535e-01,
        6.51309371e-01,  6.79913163e-01,  6.79913163e-01,  6.51309371e-01,
        5.90545535e-01,  4.86700922e-01,  2.87406445e-01, -2.27472447e-02,
        8.64815153e-03,  5.72786573e-03,  5.80798741e-03,  2.35135946e-03,
       -1.87390624e-03,  4.64660203e-04,  1.47953222e-03, -9.20925662e-03,
        1.44466665e-02,  2.10718200e-01,  4.44556117e-01,  5.57587683e-01,
        6.23176277e-01,  6.51309371e-01,  6.51309371e-01,  6.23176277e-01,
        5.57587683e-01,  4.44556117e-01,  2.10718200e-01,  1.44466665e-02,
       -9.20925662e-03,  1.47953222e-03,  4.64660203e-04, -1.87390624e-03,
        4.40055795e-04, -5.64555463e-04, -1.17544107e-04,  8.14915262e-03,
       -9.47563723e-03,  1.91706214e-02,  3.48833084e-01,  4.85881060e-01,
        5.57587683e-01,  5.90545535e-01,  5.90545535e-01,  5.57587683e-01,
        4.85881060e-01,  3.48833084e-01,  1.91706214e-02, -9.47563723e-03,
        8.14915262e-03, -1.17544107e-04, -5.64555463e-04,  4.40055795e-04,
       -2.11503473e-03, -4.58397483e-03, -3.97029379e-03, -2.10664654e-03,
        6.64596492e-03,  1.42652057e-02,  1.13957971e-01,  3.48833084e-01,
        4.44556117e-01,  4.86700922e-01,  4.86700922e-01,  4.44556117e-01,
        3.48833084e-01,  1.13957971e-01,  1.42652057e-02,  6.64596492e-03,
       -2.10664654e-03, -3.97029379e-03, -4.58397483e-03, -2.11503473e-03,
       -5.94630023e-04, -3.07089300e-03, -4.15315945e-03,  1.57847553e-05,
        3.11273616e-03,  8.38879496e-03,  1.42652057e-02,  1.91706214e-02,
        2.10718200e-01,  2.87406445e-01,  2.87406445e-01,  2.10718200e-01,
        1.91706214e-02,  1.42652057e-02,  8.38879496e-03,  3.11273616e-03,
        1.57847553e-05, -4.15315945e-03, -3.07089300e-03, -5.94630023e-04,
       -1.20586285e-03, -3.42558604e-03, -1.51210290e-03,  5.27946278e-03,
       -6.14789175e-03,  3.11273616e-03,  6.64596492e-03, -9.47563723e-03,
        1.44466665e-02, -2.27472447e-02, -2.27472447e-02,  1.44466665e-02,
       -9.47563723e-03,  6.64596492e-03,  3.11273616e-03, -6.14789175e-03,
        5.27946278e-03, -1.51210290e-03, -3.42558604e-03, -1.20586285e-03,
       -2.10326957e-03, -8.36131570e-04,  3.58948112e-03, -4.02368791e-03,
        5.27946278e-03,  1.57847553e-05, -2.10664654e-03,  8.14915262e-03,
       -9.20925662e-03,  8.64815153e-03,  8.64815153e-03, -9.20925662e-03,
        8.14915262e-03, -2.10664654e-03,  1.57847553e-05,  5.27946278e-03,
       -4.02368791e-03,  3.58948112e-03, -8.36131570e-04, -2.10326957e-03,
        1.75599835e-03,  1.22275506e-03, -3.53087299e-03,  3.58948112e-03,
       -1.51210290e-03, -4.15315945e-03, -3.97029379e-03, -1.17544107e-04,
        1.47953222e-03,  5.72786573e-03,  5.72786573e-03,  1.47953222e-03,
       -1.17544107e-04, -3.97029379e-03, -4.15315945e-03, -1.51210290e-03,
        3.58948112e-03, -3.53087299e-03,  1.22275506e-03,  1.75599835e-03,
       -1.83721900e-03,  1.00351009e-03,  1.22275506e-03, -8.36131570e-04,
       -3.42558604e-03, -3.07089300e-03, -4.58397483e-03, -5.64555463e-04,
        4.64660203e-04,  5.80798741e-03,  5.80798741e-03,  4.64660203e-04,
       -5.64555463e-04, -4.58397483e-03, -3.07089300e-03, -3.42558604e-03,
       -8.36131570e-04,  1.22275506e-03,  1.00351009e-03, -1.83721900e-03,
        1.23704690e-03, -1.83721900e-03,  1.75599835e-03, -2.10326957e-03,
       -1.20586285e-03, -5.94630023e-04, -2.11503473e-03,  4.40055795e-04,
       -1.87390624e-03,  2.35135946e-03,  2.35135946e-03, -1.87390624e-03,
        4.40055795e-04, -2.11503473e-03, -5.94630023e-04, -1.20586285e-03,
       -2.10326957e-03,  1.75599835e-03, -1.83721900e-03,  1.23704690e-03]
        ))  # noqa: E131


def test_basic():
    qpi = rytov(grid_size=(20, 20),
                center=(9.5, 9.5),
                radius=5e-6,
                sphere_index=1.339,
                wavelength=550e-9,
                pixel_size=1e-6)

    assert qpi["sim model"] == "rytov"
    assert np.allclose(data, qpi.pha.flatten())


def test_odd():
    qpi = rytov(grid_size=(21, 21),
                center=(9.5, 9.5),
                radius=5e-6,
                sphere_index=1.339,
                wavelength=550e-9,
                pixel_size=1e-6)

    assert qpi["sim model"] == "rytov"
    # This corresponds to a phase error of 0.3% from the maximum (0.68rad)
    assert np.allclose(data, qpi.pha[:20, :20].flatten(), rtol=0, atol=2e-3)


if __name__ == "__main__":
    # Run all tests
    loc = locals()
    for key in list(loc.keys()):
        if key.startswith("test_") and hasattr(loc[key], "__call__"):
            loc[key]()
